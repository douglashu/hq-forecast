<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hq.elva.dao.generate.TBasAlimccMapper">
  <resultMap id="BaseResultMap" type="com.hq.elva.entity.generate.TBasAlimcc">
    <id column="MCC_CD" jdbcType="VARCHAR" property="mccCd" />
    <result column="P_MCC_CD" jdbcType="VARCHAR" property="pMccCd" />
    <result column="BUS_CLS" jdbcType="VARCHAR" property="busCls" />
    <result column="BUS_DESC" jdbcType="VARCHAR" property="busDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MCC_CD, P_MCC_CD, BUS_CLS, BUS_DESC
  </sql>
  <select id="selectByExample" parameterType="com.hq.elva.entity.generate.TBasAlimccExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bas_alimcc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_bas_alimcc
    where MCC_CD = #{mccCd,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_bas_alimcc
    where MCC_CD = #{mccCd,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hq.elva.entity.generate.TBasAlimccExample">
    delete from t_bas_alimcc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hq.elva.entity.generate.TBasAlimcc">
    insert into t_bas_alimcc (MCC_CD, P_MCC_CD, BUS_CLS, 
      BUS_DESC)
    values (#{mccCd,jdbcType=VARCHAR}, #{pMccCd,jdbcType=VARCHAR}, #{busCls,jdbcType=VARCHAR}, 
      #{busDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hq.elva.entity.generate.TBasAlimcc">
    insert into t_bas_alimcc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mccCd != null">
        MCC_CD,
      </if>
      <if test="pMccCd != null">
        P_MCC_CD,
      </if>
      <if test="busCls != null">
        BUS_CLS,
      </if>
      <if test="busDesc != null">
        BUS_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mccCd != null">
        #{mccCd,jdbcType=VARCHAR},
      </if>
      <if test="pMccCd != null">
        #{pMccCd,jdbcType=VARCHAR},
      </if>
      <if test="busCls != null">
        #{busCls,jdbcType=VARCHAR},
      </if>
      <if test="busDesc != null">
        #{busDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hq.elva.entity.generate.TBasAlimccExample" resultType="java.lang.Long">
    select count(*) from t_bas_alimcc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_bas_alimcc
    <set>
      <if test="record.mccCd != null">
        MCC_CD = #{record.mccCd,jdbcType=VARCHAR},
      </if>
      <if test="record.pMccCd != null">
        P_MCC_CD = #{record.pMccCd,jdbcType=VARCHAR},
      </if>
      <if test="record.busCls != null">
        BUS_CLS = #{record.busCls,jdbcType=VARCHAR},
      </if>
      <if test="record.busDesc != null">
        BUS_DESC = #{record.busDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_bas_alimcc
    set MCC_CD = #{record.mccCd,jdbcType=VARCHAR},
      P_MCC_CD = #{record.pMccCd,jdbcType=VARCHAR},
      BUS_CLS = #{record.busCls,jdbcType=VARCHAR},
      BUS_DESC = #{record.busDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hq.elva.entity.generate.TBasAlimcc">
    update t_bas_alimcc
    <set>
      <if test="pMccCd != null">
        P_MCC_CD = #{pMccCd,jdbcType=VARCHAR},
      </if>
      <if test="busCls != null">
        BUS_CLS = #{busCls,jdbcType=VARCHAR},
      </if>
      <if test="busDesc != null">
        BUS_DESC = #{busDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where MCC_CD = #{mccCd,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hq.elva.entity.generate.TBasAlimcc">
    update t_bas_alimcc
    set P_MCC_CD = #{pMccCd,jdbcType=VARCHAR},
      BUS_CLS = #{busCls,jdbcType=VARCHAR},
      BUS_DESC = #{busDesc,jdbcType=VARCHAR}
    where MCC_CD = #{mccCd,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.hq.elva.entity.generate.TBasAlimccExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bas_alimcc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>