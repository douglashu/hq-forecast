<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.2.xsd ">


	<!-- <bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:ibs/db/ora1"></property>
	</bean> -->
	<!-- dataSource -->
	<bean id="dataSourceDruid" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${datasource.mysql.url}" />
        <property name="username" value="${datasource.mysql.username}" />
        <property name="password" value="${datasource.mysql.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${datasource.mysql.initialSize}" />
        <property name="minIdle" value="${datasource.mysql.minIdle}" />
        <property name="maxActive" value="${datasource.mysql.maxActive}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${datasource.mysql.maxWait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${datasource.mysql.timeBetweenEvictionRunsMillis}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${datasource.mysql.minEvictableIdleTimeMillis}" />

        <property name="validationQuery" value="${datasource.mysql.validationQuery}" />
        <property name="testWhileIdle" value="${datasource.mysql.testWhileIdle}" />
        <property name="testOnBorrow" value="${datasource.mysql.testOnBorrow}" />
        <property name="testOnReturn" value="${datasource.mysql.testOnReturn}" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${datasource.mysql.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${datasource.mysql.maxOpenPreparedStatements}" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${datasource.mysql.filters}" />
    </bean>

	<!-- session -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDruid" />
		<property name="configLocation" value="classpath:mybatis-configuration.xml" />
		<property name="mapperLocations" value="classpath:mapper/**/*.xml"></property>
		<property name="typeAliasesPackage" value="com.hq.sid.entity"></property>
	</bean>

	<!-- mapper scan -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hq.sid.dao" />
	</bean>

	<!-- transaction -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceDruid">
		</property>
	</bean>

	<!-- 启用注解事务控制 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>